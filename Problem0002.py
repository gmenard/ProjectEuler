'''
Problem 2 - Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Result:  4613732
Execution time: 0.000087 seconds

@author: Guillaume MENARD
'''

from utils.Timer import timeExecution

limit = 4000000

def isEvenNumber(num):
    if(num % 2 == 0):
        return True
    else:
        return False


def main():
    
    res = 0
    fibo_num = [0] * 2
    
    fibo_num[0] = 1
    fibo_num[1] = 2
    
    while(fibo_num[0] < limit and fibo_num[1] < limit):
        if(isEvenNumber(fibo_num[0])):
            res += fibo_num[0]
        if(isEvenNumber(fibo_num[1])):
            res += fibo_num[1]
            
        fibo_num[0] = fibo_num[0] + fibo_num[1]
        fibo_num[1] = fibo_num[0] + fibo_num[1]      
    print('Result: ', res)


if __name__ == '__main__':
    timeExecution(main)